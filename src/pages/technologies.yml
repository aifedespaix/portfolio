fr:
  pages:
    technologies:
      meta:
        title: Technologies & Logiciels
        description: Les technologies, langages, frameworks, bibliothèques, logiciels et outils que j'utilise.
      description: Mon expérience en tant que développeur web m'a fait découvrir plusieurs langages de programmation, ainsi que de multiples frameworks, bibliothèques et outils. J'ai également appris à utiliser différents logiciel pour mon travail en tant que créateur de contenu. Cet espace permet de centraliser les technologies que j'ai adoptées dans mon processus de travail.
      titles:
        languages: Langages de programmation
        softwares: Les logiciels que j'utilise régulièrement
        libraries: Bibliothèques et Frameworks associés
        creations: Réalisations
      documentation: Documentation
      website:
        title: Site officiel
      experience: "{count} an d'expérience | {count} ans d'expérience"
      languages:
        javascript:
          description: JavaScript est un langage de programmation côté client utilisé pour créer des pages web interactives. Il est initialement conçu pour ajouter des fonctionnalités dynamiques aux pages web, aujourd'hui il est utilisé pour créer des applications web complexes.
          utilisation: J'ai utilisé JavaScript pour la création de sites web interactifs. Je me suis rapidement tourné vers le TypeScript pour gagner en qualité de code et en facilité de développement.
          libraries:
            vue:
              description: Vue.js est un framework JavaScript pour la création de pages web interactives. Il est conçu pour faciliter la création d'applications et de sites webs de toute taille.
              utilisation: J'ai utilisé Vue.js pour la création de sites, interfaces de gestion, et overlays interactifs.
              apports: Vue est le framework qui m'a le plus attiré, de par son approche orientée HTML de la logique. C'est avec l'arrivée de Vue 3 que je l'ai intégré à une majorité de mes projets.
            react:
              description: React est une librairie JavaScript pour la création de pages web interactives. Elle est la librairie la plus utilisée et populaire pour la création d'applications web.
              utilisation: J'utilise principalement React pour la réalisation de vidéos automatisées grâce à la librairie Remotion. J'en connais les bases, mais ne le reserve que pour cette utilisation.
              apports: 'J’ai découvert un nouveau paradigme avec JSX et le rendu déclaratif, mais j’ai préféré la syntaxe de Vue pour mes projets web.'
            angular:
              description: Angular est un framework dédié à la création d'applications web ambitieuses.
              utilisation: Angular fut mon premier framework front end que j'ai découvert. Son approche orientée composants et son architecture imposant une découpe stricte du code m'ont ouvert à de nombreux concepts que j'utilise aujourd'hui.
            leaflet:
              description: Leaflet est une librairie JavaScript pour la création de cartes interactives.
              utilisation: J'utilise Leaflet pour la création de cartes interactives.
              apports: Grâce à sa simplicité, Leaflet m'a fait gagner un temps précieux lors de la création de cartes.
            nestjs:
              description: NestJS est un framework pour la création d'applications Node.js. Il impose un cadre pour la structure du code, mais offre une grande flexibilité permettant de répondre à des besoins variés.
              utilisation: J'ai utilisé NestJS pour la création d'API REST et GraphQL, de services d'authentification, de stockage de fichiers.
              apports: Ayant pas mal travaillé sur AngularJS, j'ai tout de suite accroché à la philosophie de NestJS. Aujourd'hui je l'utilise pour beaucoup de projets backend, de grande ou petite envergure.
            firebase:
              description: Firebase est un service de base de données NoSQL pour le développement web.
              utilisation: J'ai utilisé Firebase pour la sauvegarde de données, l'authentification, les données en temps réel dans des projets où j'avais besoin d'un service rapide à mettre en place.
              apports: Firebase me fait gagner beaucoup de temps quand je dois concevoir et stocker des données lors d'un projet où les résultats doivent être rapides.
            threejs:
              description: Three.js est une librairie JavaScript pour la création de 3D.
              utilisation: J'utilise souvent cette technologie pour la création de projets où je souhaite intégrer des graphismes 3D sur des projets persos. Que ce soit des petits jeux sur navigateur ou des graphismes 3D pour des sites web.
              apports: Three.js m'a ouvert au monde du développement en 3D et aux jeux vidéos. J'ai beaucoup progressé sur la programmation Orienté Objet et les Design Patterns. J'ai également pu travailler avec des moteurs Physiques, notamment Rapier, pour intégrer un système de gestion des collisions.
        php:
          description: PHP est un langage de programmation principalement utilisé pour le développement web côté serveur. Il est très populaire pour son utilisation dans le développement web dynamique et son intégration avec HTML.
          utilisation: J'ai débuté la programmation grâce à ce langage, j'ai appris à l'utiliser pour factoriser la création de mes pages web. Jusqu'à concevoir des applications robustes grâce à son approche objet. Jusqu'à m'intéresser à des frameworks pour viser une structure plus propre et plus maintenable.
          libraries:
            symfony:
              description: Symfony est un framework PHP pour le développement web. Il est conçu pour faciliter la création d'applications web robustes et scalables.
              utilisation: J'ai travaillé avec Symfony durant de nombreux projets scolaires. L'objectif était de travailler efficacement en groupe, le cadre d'un tel framework d'organiser efficacement les différents jalons de production.
              apports: J'ai appris à mettre en place des bonnes pratiques de développement, comme un découpage strict et une gestion des erreurs efficace.
            wordpress:
              description: WordPress est un système de gestion de contenu (CMS) open source conçu pour faciliter la création de sites web. Il est largement utilisé pour la création de blogs et de sites vitrines.
              utilisation: J'ai utilisé WordPress pour la création de sites web à destination d'autoentrepreneurs et d'associations. L'intérêt principal de WordPress est de pouvoir laisser le client gérer son contenu sans avoir besoin de connaissances en programmation. Mon travail consiste principalement à concevoir des thèmes WordPress adaptés à leurs besoins.
              apports: J'ai appris travailler le référencement naturel, les bonnes pratiques de sécurité, et d'accessibilité.
      softwares:
        photoshop:
          description: Photoshop est un logiciel de retouche d'images.
          utilisation: J'utilise Photoshop pour la retouche d'images, la création de visuels pour mes projets, ou pour travailler des supports visuels rapidement.
        illustrator:
          description: Illustrator est un logiciel de création de visuels vectoriels.
          utilisation: J'utilise Illustrator pour la création et modification de logos ou illustrations.
        premierePro:
          description: Premiere Pro est un logiciel de montage de vidéos.
          utilisation: J'utilise Premiere Pro pour réaliser une grande partie de les vidéos. Ma maîtrise du logiciel lié à une bonne organisation me permet de travailler très efficacement pour réaliser des montages dynamiques et impactants.
        afterEffects:
          description: After Effects est un logiciel d'animations graphiques, il est utilisé pour du motion design et des effets spéciaux.
          utilisation: J'utilise ce logiciel pour gagner fluidifier mon montage vidéo.Je ne maîtrise pas encore After Effects à un niveau expert, mais je m'en sers pour compléter l'utilisation de Premiere Pro.
        davinciResolve:
          description: DaVinci Resolve est un logiciel de montage de vidéos.
          utilisation: Je me suis formé à Da Vinci Resolve car c'est un logiciel très complet et gratuit. Il m'a permis de progresser en colorimétrie et réfléchir à de nouvelles façons de monter mes vidéos.
        vscode:
          description: VSCode est un éditeur de code multi-plateforme gratuit et open source.
          utilisation: J'utilise VSCode pour la plupart de mes projets et scripts. Ancien abonné à la suite JetBrains durant mes études, je ne souhaitais pas payer pour un IDE. J'ai adopté VSCode et son écosystème. J'apprécie avoir un contrôle sur mon environnement de travail.
        obsStudio:
          description: OBS Studio est un logiciel de capture et de streaming de vidéos.
          utilisation: J'utilise OBS Studio pour la gestion de les streams et l'enregistrement de scènes. C'est un logiciel stable et complet. Il m'a permis de concevoir des émissions en direct sur de longues périodes. Que ce soit des streams quotidiens ou des émissions durant plusieurs jours, gérées à distance par une équipe.
        docker:
          description: Docker est une plateforme qui permet de créer, déployer et exécuter des applications dans des conteneurs. Ces conteneurs rendent les projets plus portables, reproductibles et isolés de l’environnement de la machine hôte.
          utilisation: J'utilise Docker pour créer des environnements de développement uniformes, gérer des bases de données temporaires ou des services externes (comme Matomo, PostgreSQL, WordPress, etc.), et déployer facilement mes projets sur différents serveurs ou machines. Il m'a permis d'automatiser le setup de mes projets, que ce soit en local ou en production.
          apports: Docker m'a permis de gagner en fiabilité et en productivité, surtout lorsque je travaille sur plusieurs projets ou avec des équipes. Grâce à lui, j'ai réduit les problèmes liés aux différences d'environnement entre développeurs. J'ai aussi découvert des bonnes pratiques de configuration, de sécurité et d'orchestration avec Docker Compose.
en:
  pages:
    technologies:
      meta:
        title: Technologies & Software
        description: The technologies, languages, frameworks, libraries, software and tools that I use.
      description: My experience as a web developer has led me to discover several programming languages, as well as multiple frameworks, libraries, and tools. I have also learned to use various software for my work as a content creator. This space centralizes the technologies I have adopted in my workflow.
      titles:
        languages: Programming Languages
        softwares: Software I Regularly Use
        libraries: Associated Libraries and Frameworks
        creations: Creations
      documentation: Documentation
      experience: '{count} year of experience | {count} years of experience'
      website:
        title: Official Website
      languages:
        javascript:
          description: JavaScript is a client-side programming language used to create interactive web pages. It was initially designed to add dynamic features to web pages, but today it is used to create complex web applications.
          utilisation: I used JavaScript to create interactive websites. I quickly turned to TypeScript to improve code quality and ease of development.
          libraries:
            vue:
              description: Vue.js is a JavaScript framework for creating interactive web pages. It is designed to facilitate the creation of applications and websites of any size.
              utilisation: I used Vue.js to create websites, management interfaces, and interactive overlays.
              apports: Vue is the framework that attracted me the most, due to its HTML-oriented approach to logic. It was with the arrival of Vue 3 that I integrated it into a majority of my projects.
            react:
              description: React is a JavaScript library for creating interactive web pages. It is the most used and popular library for creating web applications.
              utilisation: I mainly use React for the creation of automated videos thanks to the Remotion library. I know the basics, but only use it for this purpose.
              apports: 'I discovered a new paradigm with JSX and declarative rendering, but I preferred the syntax of Vue for my web projects.'
            angular:
              description: Angular is a framework dedicated to the creation of ambitious web applications.
              utilisation: Angular was my first front-end framework that I discovered. Its component-oriented approach and its architecture imposing a strict code division opened me up to many concepts that I use today.
            leaflet:
              description: Leaflet is a JavaScript library for creating interactive maps.
              utilisation: I use Leaflet to create interactive maps.
              apports: Leaflet's ease of use saved me time when creating maps.
            nestjs:
              description: NestJS is a framework for creating Node.js applications. It imposes a framework for the code structure, but offers great flexibility to meet various needs.
              utilisation: I used NestJS to create REST and GraphQL APIs, authentication services, and file storage.
              apports: Having worked quite a bit on AngularJS, I immediately took to the philosophy of NestJS. Today I use it for many backend projects, large or small.
            firebase:
              description: Firebase is a NoSQL database service for web development.
              utilisation: I used Firebase for data backup, authentication, and real-time data in projects where I needed a quick-to-set-up service.
              apports: Firebase saves me a lot of time when I have to design and store data for a project where results need to be fast.
            threejs:
              description: Three.js is a JavaScript library for creating 3D graphics.
              utilisation: I often use this technology for creating projects where I want to integrate 3D graphics into personal projects. Whether it's small browser games or 3D graphics for websites.
              apports: Three.js opened me up to the world of 3D development and video games. I have made a lot of progress on Object-Oriented Programming and Design Patterns. I was also able to work with Physics engines, notably Rapier, to integrate a collision management system.
        php:
          description: PHP is a programming language mainly used for server-side web development. It is very popular for its use in dynamic web development and its integration with HTML.
          utilisation: I started programming with this language, I learned to use it to factorize the creation of my web pages. Up to designing robust applications thanks to its object-oriented approach. Up to getting interested in frameworks to aim for a cleaner and more maintainable structure.
          libraries:
            symfony:
              description: Symfony is a PHP framework for web development. It is designed to facilitate the creation of robust and scalable web applications.
              utilisation: I worked with Symfony on many school projects. The objective was to work efficiently as a group, the framework of such a framework to effectively organize the different production milestones.
              apports: I learned to implement good development practices, such as strict division and effective error management.
            wordpress:
              description: WordPress is an open-source content management system (CMS) designed to facilitate website creation. It is widely used for creating blogs and showcase sites.
              utilisation: I used WordPress to create websites for self-employed entrepreneurs and associations. The main interest of WordPress is to allow the client to manage their content without needing programming knowledge. My work mainly consists of designing WordPress themes adapted to their needs.
              apports: I learned to work on natural referencing, good security practices, and accessibility.
      softwares:
        photoshop:
          description: Photoshop is an image editing software.
          utilisation: I use Photoshop for image editing, creating visuals for my projects, or quickly working on visual media.
        illustrator:
          description: Illustrator is a vector graphics creation software.
          utilisation: I use Illustrator for creating and modifying logos or illustrations.
        premierePro:
          description: Premiere Pro is a video editing software.
          utilisation: I use Premiere Pro to produce a large part of the videos. My mastery of the software combined with good organization allows me to work very efficiently to create dynamic and impactful edits.
        afterEffects:
          description: After Effects is a motion graphics software, used for motion design and special effects.
          utilisation: I use this software to streamline my video editing. I don't have expert-level mastery, but I use it to complement the use of Premiere Pro.
        davinciResolve:
          description: DaVinci Resolve is a video editing software.
          utilisation: I trained in DaVinci Resolve because it is a very complete and free software. It allowed me to progress in color grading and think about new ways to edit my videos.
        vscode:
          description: VSCode is a free and open-source multi-platform code editor.
          utilisation: I use VSCode for most of my projects and scripts. Former subscriber to the JetBrains suite during my studies, I did not want to pay for an IDE. I adopted VSCode and its ecosystem. I appreciate having control over my work environment.
        obsStudio:
          description: OBS Studio is a video capture and streaming software.
          utilisation: I use OBS Studio for managing streams and recording scenes. It is stable and complete software. It allowed me to design live broadcasts over long periods. Whether it's daily streams or broadcasts lasting several days managed by a remote team.
        docker:
          description: Docker is a platform that allows you to build, deploy, and run applications in containers. These containers make projects more portable, reproducible, and isolated from the host machine environment.
          utilisation: I use Docker to create consistent development environments, manage temporary databases or external services (like Matomo, PostgreSQL, WordPress, etc.), and easily deploy my projects across different servers or machines. It allowed me to automate project setups, whether locally or in production.
          apports: Docker helped me improve reliability and productivity, especially when working on multiple projects or with teams. It reduced environment-related issues between developers. I also learned best practices in configuration, security, and orchestration using Docker Compose.
